import App from './App';
import Positionable from './Positionable';
import Shoot from './Shoot';
import { Consumable, Passive, ShapeFunction, TemporaryEffects } from '../interfaces';
import Rate from './Rate';
export default class Player extends Positionable {
    app: App;
    baseLife: number;
    life: number;
    score: number;
    baseShootSpeed: number;
    baseShootRange: number;
    baseShootDamage: number;
    baseShootRate: number;
    speedX: number;
    speedY: number;
    speedMax: number;
    acc: number;
    desc: number;
    highScore: number;
    consumables: Consumable[];
    passives: Passive[];
    shoots: Shoot[];
    temporary: TemporaryEffects;
    shootRating: Rate;
    constructor(app: App);
    readonly shootSpeed: number;
    readonly shootRange: number;
    readonly shootDamage: number;
    readonly shootRate: number;
    setTemporary(flag: string, duration: number, shape: ShapeFunction): void;
    getTemporary(flag: string): boolean;
    addPassive(passive: Passive): void;
    addConsumable(consumable: Consumable): void;
    getPassive(id: string): Passive | null;
    step(): void;
    keyPressed(key: string): void;
    draw(): void;
}
